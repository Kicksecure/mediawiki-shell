#!/usr/bin/env bash

set -euEo pipefail

# shellcheck source=../share/mediawiki-shell/common
source /usr/share/mediawiki-shell/common

log info "START"

# TODO: ben: Unused function and variable. Confirm deletion.
error_out_maybe() {
  if [ "${wiki_error_on_fetch-}" = "true" ]; then
    return 1
  fi
  return 0
}

usage(){
  printf '%s\n' "Usage: ${0##*/} WIKI WIKI_TARGET [OUTPUT_DIR]
Defaults:
  OUTPUT_DIR=${default_output_dir}
Example:
  ${0##*/} 'https://www.kicksecure.com/w' 'https://www.whonix.org'
  ${0##*/} 'https://www.kicksecure.com/w' 'https://www.whonix.org' ${default_output_dir}" >&2
  exit 1
}

[[ -v wiki_url_target ]] || wiki_url_target='https://www.whonix.org/w'

default_output_dir="$HOME/mediawiki-shell/mirror-multi-wiki"
if [[ -z "${3-}" || "${1-}" =~ (-h|--help) ]]; then
  usage
fi

wiki_url="$1"
wiki_url_target="$2"
output_dir="${3-"${default_output_dir}"}"

# TODO: ben: option parsing
[[ -v WIKI_API ]] || WIKI_API="${wiki_url}/api.php"
[[ -v continue_from_page ]] || continue_from_page=""
[[ -v multiwiki_category ]] || multiwiki_category='MultiWiki'
#[[ -v wiki_multi_extra_wiki_pages_list ]] || wiki_multi_extra_wiki_pages_list="'MediaWiki:Build.json'"
[[ -v wiki_multi_extra_wiki_pages_list ]] || wiki_multi_extra_wiki_pages_list=""

allpages_file="${TMPFOLDER}/allpages.txt"
safe-rm -f -- "$allpages_file"

log info "TMPFOLDER         : $TMPFOLDER"
log info "wiki_url   : $wiki_url"
log info "WIKI_API   : $WIKI_API"
log info "allpages_file     : $allpages_file"
log info "multiwiki_category: $multiwiki_category"
log info "wiki_multi_extra_wiki_pages_list: $wiki_multi_extra_wiki_pages_list"

mkdir --parents -- "$output_dir"

if ! test -d "$output_dir"; then
  log error "output_dir '$output_dir' does not exist! Run...?:"
  stecho "mkdir --parents -- '$output_dir'"
  exit 1
fi

if ! test -w "$output_dir"; then
  log error "output_dir '$output_dir' unwriteable! Run...?:"
  stecho "chown --recursive -- '$USER:$USER' '$output_dir'"
  exit 1
fi

mw-login-test "$wiki_url"

all_pages="$(
  $curl \
    "${curl_opts[@]}" \
    "${WIKI_API}?action=query&format=json&list=categorymembers&cmtitle=Category:$multiwiki_category&cmlimit=500"
)"

## TODO: cmcontinue
#https://www.kicksecure.com/w/api.php?action=query&format=json&list=categorymembers&cmtitle=Category:MultiWiki&cmcontinue=page|434f444553454c454354|748

for wiki_multi_extra_wiki_pages_item in $wiki_multi_extra_wiki_pages_list; do
  stecho "$wiki_multi_extra_wiki_pages_item" | tee -a "$allpages_file" >/dev/null
done

stecho "$all_pages" | jq -r ".query.categorymembers[] | .title | @sh" | tee -a "$allpages_file" >/dev/null

test -f "$allpages_file"
if [ ! -s "$allpages_file" ]; then
  log error "allpages_file file is empty!" >&2
  exit 1
fi
counter_total="$(awk 'END {print NR}' "$allpages_file")"

## continue_from_page="Template:VM" mw-multi-wiki
continue_next=no
if [ -z "$continue_from_page" ]; then
  continue_next=yes
fi

counter_currently=0
while IFS=$'\n' read -r item_from_all_pages; do
  counter_currently=$((counter_currently + 1))

  backup_page_item="$item_from_all_pages"
  ## remove last letter ("'")
  backup_page_item="${backup_page_item::-1}"
  ## remove first letter ("'")
  backup_page_item="${backup_page_item:1}"

  search=" "
  replace="_"
  backup_page_item=$(stecho "$backup_page_item" | str_replace "$search" "$replace")

  stecho "PAGE | $counter_currently / $counter_total | $item_from_all_pages | $backup_page_item"

  if [ "${backup_page_item,,}" = "${continue_from_page,,}" ]; then
    continue_next=yes
  fi
  if [ "$continue_next" = "no" ]; then
    continue
  fi

  copy_wiki_pages_exit_code=0

  TMPFOLDER="$TMPFOLDER" \
    edit_message="mediawiki-shell-bot-mirror-multi-wiki-page-from-kicksecure-to-whonix" \
    mw-copy-wiki-pages "$wiki_url" "$wiki_url_target" "$backup_page_item" ||
    {
      copy_wiki_pages_exit_code="$?"
      true
    }

  case "$copy_wiki_pages_exit_code" in
    10)
      log warning "PAGE - Skipped backup_page_item '$backup_page_item' because of pending edits."
      ;;
    0)
      log info "PAGE - backup_page_item '$backup_page_item' mirroring success."
      ;;
    *)
      die 1 "PAGE - backup_page_item '$backup_page_item' mirroring error! copy_wiki_pages_exit_code: '$copy_wiki_pages_exit_code'"
      ;;
  esac

  if ! stecho "$backup_page_item" | grep --ignore-case -- "File:" >/dev/null 2>&1; then
    stecho "FILE | No, not a file, ok."
    continue
  fi

  stecho "FILE | $counter_currently / $counter_total | $item_from_all_pages | $backup_page_item"

  copy_wiki_file_exit_code=0

  TMPFOLDER="$TMPFOLDER" \
    edit_message="mediawiki-shell-bot-mirror-multi-wiki-file-from-kicksecure-to-whonix" \
    mw-copy-wiki-file "$wiki_url" "$wiki_url_target" "$backup_page_item" ||
    {
      copy_wiki_file_exit_code="$?"
      true
    }

  case "$copy_wiki_file_exit_code" in
    10)
      log warning "FILE - Skipped backup_page_item '$backup_page_item' because of pending edits."
      ;;
    0)
      log info "FILE - backup_page_item '$backup_page_item' mirroring success."
      ;;
    *)
      die 1 "FILE - backup_page_item '$backup_page_item' mirroring error! copy_wiki_pages_exit_code: '$copy_wiki_file_exit_code'"
      ;;
  esac

  continue

done <"$allpages_file"
