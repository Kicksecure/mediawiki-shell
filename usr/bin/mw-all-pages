#!/usr/bin/env bash

set -euEo pipefail

# shellcheck source=../share/mediawiki-shell/common
source /usr/share/mediawiki-shell/common

log info "START"

usage(){
  printf '%s\n' "Usage: ${0##*/} WIKI QUERY OUTPUT [API_ENDPOINT]
Defaults:
  API_ENDPOINT=WIKI/${default_wiki_api_endpoint}
Example:
  ${0##*/} https://www.kicksecure.com/w
  ${0##*/} https://www.kicksecure.com/w [allpages|unreviewedpages|querypage]
  ${0##*/} https://www.kicksecure.com/w allpages /tmp/allpages.txt
  ${0##*/} https://www.kicksecure.com/w allpages /tmp/allpages.txt https://www.kicksecure.com/w/api.php" >&2
  exit 1
}

default_wiki_api_endpoint="api.php"
if [[ -z "${3-}" || "${1-}" =~ (-h|--help) ]]; then
  usage
fi

wiki_url="$1"
query_type="$2"
allpages_file="$3"
wiki_api_endpoint="${4-"$wiki_url/api.php"}"

# TODO: ben: option argument
[[ -v wiki_article_must_include_sanity_test ]] || wiki_article_must_include_sanity_test=""
## https://www.mediawiki.org/wiki/Manual:Namespace
## https://www.kicksecure.com/w/api.php?action=query&meta=siteinfo&siprop=namespaces
## https://www.whonix.org/w/api.php?action=query&meta=siteinfo&siprop=namespaces
[[ -v wiki_namespace_list_default ]] || wiki_namespace_list_default="0 4 6 8 10 12 14"
## NOTE to self by Patrick: also set by other script:
## wiki-backup-with-mediawiki-shell
## 500: site-specific namespace Moved
## 274: site-specific namespace Widgets
#[[ -v wiki_namespace_list_extra ]] || wiki_namespace_list_extra="500 274"
[[ -v wiki_namespace_list_extra ]] || wiki_namespace_list_extra=""

api_extra_args=""
case "$query_type" in
  allpages)
    list=allpages
    namespace_keyword=apnamespace
    api_continue_keyword=apcontinue
    api_limit_keyword_and_content="aplimit=500"
    ;;
  unreviewedpages)
    list=unreviewedpages
    namespace_keyword=urnamespace
    api_continue_keyword=urstart
    api_limit_keyword_and_content="urlimit=500"
    ;;
  querypage)
    list=querypage
    namespace_keyword=""
    api_continue_keyword=""
    api_limit_keyword_and_content="qplimit=500"
    api_extra_args="&qppage=Unusedimages"
    ## Upstream does not support name spaces for this API call.
    wiki_namespace_list_extra=""
    wiki_namespace_list_default=0
    ## https://www.kicksecure.com/w/api.php?action=query&list=querypage&qppage=Unusedimages
    ;;
  *)
    log error "query_type must be set to either: allpages, unreviewedpages or querypage"
    exit 1
    ;;
esac

safe-rm -f -- "$allpages_file"

log info "allpages_file              : $allpages_file"
log info "wiki_namespace_list_default: $wiki_namespace_list_default"
log info "wiki_namespace_list_extra  : $wiki_namespace_list_extra"
log info "SOURCE_WIKI_URL  : $SOURCE_WIKI_URL"
log info "wiki_api_endpoint: $wiki_api_endpoint"
log info "query_type: $query_type"

## Not required for public wiki.
#mw-login-test "$wiki_url"

for wiki_namespace_item in $wiki_namespace_list_extra $wiki_namespace_list_default; do
  log info "wiki_namespace_item: $wiki_namespace_item"

  api_continue_or_not=""

  while true; do
    log info "api_full_link:"
    api_full_link="${wiki_api_endpoint}?&format=json&action=query&list=${list}&${namespace_keyword}=${wiki_namespace_item}&${api_limit_keyword_and_content}&${api_continue_keyword}=${api_continue_or_not}${api_extra_args}"
    stecho "$api_full_link"

    query_result=$($curl "${curl_opts[@]}" "$api_full_link")

    case "$query_type" in
      allpages)
        stecho "$query_result" | jq -r ".query.allpages[] | .title | @sh" | tee -a -- "$allpages_file" >/dev/null
        ## If curl exits non-zero, consider no longer API continue.
        ## If curl exits zero, set variable api_continue_or_not.
        if ! api_continue_or_not="$(stecho "$query_result" | jq -r ".continue | .apcontinue")"; then
          break
        fi
        ## If api_continue_or_not is set to "null", we're done.
        if [ "$api_continue_or_not" = "null" ]; then
          break
        fi
        ;;
      unreviewedpages)
        stecho "$query_result" | jq -r '.query.unreviewedpages[] | .title | @sh' | tee -a -- "$allpages_file" >/dev/null
        if ! api_continue_or_not="$(stecho "$query_result" | jq -r ".continue.urstart")"; then
          break
        fi
        if [ "$api_continue_or_not" = "null" ]; then
          break
        fi
        ;;
      querypage)
        stecho "$query_result" | jq -r '.query.querypage.results[] | .title' | tee -a -- "$allpages_file" >/dev/null
        ## Upstream does not support name spaces for this API call.
        break
        ;;
      *)
        log error "Not implemented!"
        break
      ;;
    esac
  done
done

test -f "$allpages_file"
if [ ! -s "$allpages_file" ]; then
  log error "allpages_file file is empty!" >&2
  exit 1
fi
result_test="$(stcat "$allpages_file")"

if [ -z "$wiki_article_must_include_sanity_test" ]; then
  log info "wiki_article_must_include_sanity_test not configured, ok."
  exit
fi

## TODO: stecho too much. ARG_MAX potentially hit. grep based on file instead.
if grep -i -- "$wiki_article_must_include_sanity_test" "$allpages_file" >/dev/null 2>&1; then
  log info "result_test does contain wiki_article_must_include_sanity_test '$wiki_article_must_include_sanity_test', ok. "
else
  log error "See script source code. result_test does not contain '$wiki_article_must_include_sanity_test'! allpages_file: '$allpages_file'"
  log error "result_test: '$result_test'"
  exit 1
fi
