#!/usr/bin/env bash

set -euEo pipefail

# shellcheck source=../share/mediawiki-shell/common
source /usr/share/mediawiki-shell/common

usage(){
  printf '%s\n' "Usage: ${0##*/} WIKI SCRIPT
Example:
  ${0##*/}" >&2
  exit 1
}

if [[ -z "${2-}" || "${1-}" =~ (-h|--help) ]]; then
  usage
fi
wiki_url="$1"
wiki_script="$2"

# TODO: ben: parse options
[[ -v continue_from_page ]] || continue_from_page=""

# shellcheck source=../share/mediawiki-shell/wiki-config
WIKI_URL="$wiki_url" source /usr/share/mediawiki-shell/wiki-config

log info "TMPFOLDER : $TMPFOLDER"
log info "WIKI_URL  : $WIKI_URL"

## Not required for public wiki.
#mw-login-test "$wiki_url"

allpages_file="${TMPFOLDER}/allpages.txt"

safe-rm -f -- "$allpages_file"
mw-all-pages "$wiki_url" allpages "$allpages_file"

test -r "$allpages_file"

counter_total="$(awk 'END {print NR}' "$allpages_file")"

counter_currently=0
counter_chunk=0
chunk_max_size=10
pid_list=""
start_from_here="not-yet"

while IFS=$'\n' read -r item_from_all_pages; do
  counter_currently=$((counter_currently + 1))
  backup_page_item=$(set_backup_page_item "$item_from_all_pages")
  backup_filename_item=$(set_backup_filename_item "$backup_page_item")

  ## XXX
  wiki_page_item="$backup_page_item"
  wiki_article_to_fetch="$backup_page_item"

  counter_chunk=$((counter_chunk + 1))

  ## TODO:
  #continue_from_page="Network_Time_Synchronization"

  if [ -z "$continue_from_page" ] ||[ "${backup_page_item,,}" = "${continue_from_page,,}" ]; then
    start_from_here=true
  fi

  if [ ! "$start_from_here" = "true" ]; then
    log info "skip: $counter_currently / $counter_total | counter_chunk: $counter_chunk | $backup_page_item | $backup_filename_item"
    continue
  fi
  log notice "act: $counter_currently / $counter_total | counter_chunk: $counter_chunk | $backup_page_item | $backup_filename_item"

  if [ "$backup_page_item" = "Changelog" ]; then
    continue
  fi

  TMPFOLDER_SEPARATE="$TMPFOLDER/separate/$counter_currently"
  mkdir --parents -- "$TMPFOLDER_SEPARATE"

  # TODO: ben: verify variables being passed
  run_background=1 log_run \
    env \
    counter_currently="$counter_currently" \
    counter_chunk="$counter_chunk" \
    TMPFOLDER="$TMPFOLDER_SEPARATE" \
    WIKI_URL="$wiki_url" \
    backup_page_item="$backup_page_item" \
    backup_filename_item="$backup_filename_item" \
    wiki_page_item="$wiki_page_item" \
    wiki_article_to_fetch="$wiki_article_to_fetch" \
    mw-retry-wrapper "$wiki_script"

  pid_list+=" $background_pid"

  if [ "$counter_chunk" -ge "$chunk_max_size" ] || [ "$counter_currently" -ge "$counter_total" ]; then
    counter_chunk=0
    log info "wait $pid_list"

    for check_pid in $pid_list; do
      if ! wait "$check_pid"; then
        log error "check_pid '$check_pid' failed!"
      fi
    done

    pid_list=""
  fi

done <"$allpages_file"
