#!/usr/bin/env bash

set -euEo pipefail

# shellcheck source=../share/mediawiki-shell/common
source /usr/share/mediawiki-shell/common

log info "START"

usage(){
  printf '%s\n' "Usage: ${0##*/} WIKI WIKI_TARGET PAGE [OUTPUT]
Defaults:
  OUTPUT=${default_page_title_local_pretty}
Example:
  ${0##*/} 'https://www.kicksecure.com/w' 'https://www.whonix.org' Ubuntu_software
  ${0##*/} 'https://www.kicksecure.com/w' 'https://www.whonix.org' Ubuntu_software $TMPFOLDER/Ubuntu_software" >&2
  exit 1
}

default_page_title_local_pretty="$TMPFOLDER/PAGE"
if [[ -z "${3-}" || "${1-}" =~ (-h|--help) ]]; then
  usage
fi

wiki_url="$1"
wiki_url_target="$2"
page_title="$3"
default_page_title_local="$TMPFOLDER/$page_title"
page_title_local="${4-"${default_page_title_local}"}"

# shellcheck source=../share/mediawiki-shell/wiki-config
WIKI_URL="$wiki_url" source /usr/share/mediawiki-shell/wiki-config

#mw-login-test "$wiki_url"

log info "Fetching page '$wiki_url' '$page_title'..."

mw-fetch "$wiki_url" "$page_title" "$page_title_local"

log info "Fetch page success."
log info "Checking for pending changes for page..."
log info "WIKI_API: $WIKI_API"

## time-of-check to time-of-use TOCTOU
## Check for pending edits only after page was fetched.
## Checking for pending edits before fetching page would leave room for
## making a pending edit after the page has been fetched.
## This ensures that the fetched edit was not pending, i.e. confirmed.
page_pending_status_json=$(
  $curl \
    "${curl_opts[@]}" \
    "${WIKI_API}?format=json&action=query&prop=info%7Cflagged&titles=$page_title"
)

if jq . <<<"$page_pending_status_json" | grep -q -- pending_since >/dev/null 2>&1; then
  log warning "'$wiki_url' '$page_title' page has PENDING EDITS!"
  exit 10
fi

log info "No pending edits for page, ok."

mw-edit "$wiki_url_target" "$page_title" "$page_title_local"

log info "Edit page success."
